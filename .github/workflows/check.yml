name: Check

on:
  pull_request:
  push:
    branches:
      - master
      - release/*
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read

jobs:
  check-docsgen:
    name: Check (docs-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-system-dependencies
      - uses: ./.github/actions/install-go
      - run: go install golang.org/x/tools/cmd/goimports
      - run: make deps
      - run: make docsgen
      - run: git diff --exit-code
  check-gen:
    name: Check (gen-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-system-dependencies
      - uses: ./.github/actions/install-go
      - run: make deps lotus
      - run: go install golang.org/x/tools/cmd/goimports
      - run: make gen
      - run: git diff > codegen_changes.patch
      - run: git diff --exit-code
      - run: make docsgen-cli
      - run: git diff >> codegen_changes.patch
      - run: git diff --exit-code
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: codegen-diff
          path: codegen_changes.patch
  suggest-codegen-changes:
    needs: check-gen
    if: failure() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: codegen-diff
      - name: Create suggestion
        run: |
          if [ -s codegen_changes.patch ]; then
            PATCH_CONTENT=$(cat codegen_changes.patch)
            SUGGESTION=$(cat <<EOF
          \`\`\`suggestion
          $PATCH_CONTENT
          \`\`\`
          EOF
            )
            gh pr comment ${{ github.event.pull_request.number }} --body "`gen-check` failed, suggested fix:

          $SUGGESTION

          To apply these changes, please review and manually apply the suggestion above."
          else
            gh pr comment ${{ github.event.pull_request.number }} --body "Attempted to fix codegen, but no changes were necessary."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  check-lint:
    name: Check (lint-all)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-system-dependencies
      - uses: ./.github/actions/install-go
      - run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.59.0
      - run: make deps
      - run: golangci-lint run -v --timeout 10m --concurrency 4
  check-fmt:
    name: Check (gofmt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-go
      - run: go fmt ./...
      - run: git diff --exit-code
  check-mod-tidy:
    name: Check (mod-tidy-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-go
      - run: go mod tidy -v
      - run: git diff --exit-code
